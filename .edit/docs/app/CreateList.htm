
<!DOCTYPE html>
<html>

<head>
	<title>Lists</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" href="../css/themes/default/theme.min.css" />
		<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css" />
		<script src="../js/energize-min.js"></script>
		<script src="../js/jquery-1.8.1.min.js"></script>
		<script src="../../../app.js"></script>
		<script src="../js/example.js"></script>
		<link rel="stylesheet" href="../css/docs.css" />
		<script src="../js/common.js"></script>
		<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>

<div data-role="page" data-theme="a" >

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' data-theme="c" onclick="history.back(); return false">Back</a> <h1>Lists</h1>
	</div><!-- /header -->

	<div data-role="content">

		<p> Create List objects using the <b>CreateList</b> method of the <b>app</b> object: </p>

		<div class="samp">&nbsp;lst = app.CreateList( <a href="#pop_str_arr" data-transition="pop" data-rel="popup">list</a>, <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a>, <a href="#pop_str_arr" data-transition="pop" data-rel="popup">options</a> );</div>

		<p> Use the <b>SetOnTouch</b> and <b>SetOnLongTouch</b> methods of the List object to set the name of a function you want to be called when
		a list item is selected. The selected item <b>title</b>, <b>body</b>, <b>type</b> and <b>index</b> are passed into your OnTouch callback function as parameters every time an item is
		selected or long touched.</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Simple</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip1"  style="font-size:100%">
					 &nbsp;&nbsp;lst = app.CreateList( "Fred,Bill,Jim", 0.8, 0.4 );<br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lst.SetOnLongTouch( lst_OnLongTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Item = " + title + ", Index = " + index, "Short" );<br>
					}<br>
					function lst_OnLongTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Long Touch Item = " + title + ", Index = " + index, "Short" );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip1)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp1)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp1)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>You can change the look of a List using the <b>SetBackColor</b> and <b>SetTextColor</b> functions on the list object. You can also set a
		background image/pattern or background gradient for the List using the <b>SetBackground</b> and <b>SetBackGradient</b> functions.</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Gray on White</h3>
				<div id="examp2" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip2"  style="font-size:100%">
					 &nbsp;&nbsp;lst = app.CreateList( "Fred,Bill,Jim", 0.8, 0.4  );<br>
					 &nbsp;&nbsp;lst.SetTextColor( "#ff666666" );<br>
					 &nbsp;&nbsp;lst.SetBackColor( "#ffffffff" );<br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Touched Item = " + title );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip2)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp2)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp2)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p> The List object also supports <b>multi-line</b> list items and can show <b>icons</b>.  Multi-line items
		are created by dividing each list item up using the ':' (colon) character. If you need to use a colon character
		in your item text then use this character sequence: ^c^.</p>

		<p>You can have one icon and some body text using the following formats:</p>

		<p>title : icon<br>
		title : body : icon<br>
		</p>
		<p>
		You can specify your own icon file for example "Img/MyIcon.png", or one of the special built-in icons using the following key words:<br><br>
		"folder", "audiofolder", "photofolder", "videofolder", "audio", "photo", "video" and "playlist".
		</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Title + Icon</h3>
				<div id="examp3" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip3"  style="font-size:100%">
					 &nbsp;&nbsp;var data = "Folder:folder,Audio:audio,Photo:photo,Video:video";<br>
					 &nbsp;&nbsp;lst = app.CreateList( data, 0.8, 0.4 );<br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Touched Item = " + title );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip3)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp3)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp3)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Title + Body</h3>
				<div id="examp4" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip4"  style="font-size:100%">
					 &nbsp;&nbsp;var data = "The Hobbit:Author^c^ J.R.R. Tolkien:null";<br>
					 &nbsp;&nbsp;data += ",Watership Down:Author^c^ Richard Adams:null";<br>
					 &nbsp;&nbsp;lst = app.CreateList( data, 0.8, 0.4 );<br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Touched Item = " + title );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip4)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp4)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp4)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p> You can also create lists items that look like <b>buttons</b> by using one of the following options:
			"AlumButton", "GreenButton", "OrangeButton".
		</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Orange Buttons</h3>
				<div id="examp5" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip5"  style="font-size:100%">
					 &nbsp;&nbsp;var data = "Button 1,Button 2,Button 3,Button 4";<br>
					 &nbsp;&nbsp;lst = app.CreateList( data, 0.8, 0.8, "OrangeButton" );<br>
					 &nbsp;&nbsp;lst.SetBackColor( "#ffffff" );<br>
					 &nbsp;&nbsp;lst.SetPadding( 0.1, 0.1, 0.1, 0.1 );<br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Touched Item = " + title );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip5)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp5)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp5)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>Or create lists with <b>Gradient</b> backgrounds like this:-</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Gradient Background</h3>
				<div id="examp6" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip6"  style="font-size:100%">
					 &nbsp;&nbsp;var data = "";<br>
					 &nbsp;&nbsp;for( var i=1; i<=30; i++) <br>
					 &nbsp;&nbsp;{ <br>
					 &nbsp;&nbsp;&nbsp;&nbsp;if( i>1 ) data += ",";<br>
					 &nbsp;&nbsp;&nbsp;&nbsp;data += "Item "+i+":Details for item "+i+":null";<br>
					 &nbsp;&nbsp;}<br>
					 &nbsp;&nbsp;lst = app.CreateList( data, 1, 1, "WhiteGrad" );<br>
					 &nbsp;&nbsp;lst.SetTextColor1( "#ff555558");<br>
					 &nbsp;&nbsp;lst.SetTextColor2( "#ff555558" );<br>
					 &nbsp;&nbsp;lst.SetTextMargins( 0.04, 0, 0, 0 ); <br>
					 &nbsp;&nbsp;lst.SetOnTouch( lst_OnTouch );<br>
					 &nbsp;&nbsp;lay.AddChild( lst );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
					<br>
					function lst_OnTouch( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">type</a>, <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a> )<br>
					{<br>
					 &nbsp;&nbsp;app.ShowPopup( "Touched Item = " + title );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip6)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp6)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp6)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>


		<br>
		<p>The following methods are available on the List object:</p>

		<div class="samp">&nbsp;SetVisibility( <a href="#pop_bin" data-transition="pop" data-rel="popup">visibility</a> )</div>
		<div class="samp">&nbsp;GetVisibility()</div>
		<div class="samp">&nbsp;SetPadding( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_prw" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">bottom</a> )</div>
		<div class="samp">&nbsp;SetMargins( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_prw" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">bottom</a> )</div>
		<div class="samp">&nbsp;SetBackground( <a href="#pop_str_pah" data-transition="pop" data-rel="popup">imageFile</a>, <a href="#pop_str_arr" data-transition="pop" data-rel="popup">options</a> )</div>
		<div class="samp">&nbsp;SetBackColor( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetBackGradient( <a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color3</a> )</div>
		<div class="samp">&nbsp;SetBackGradientRadial( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">x</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">y</a>, <a href="#pop_num_ang" data-transition="pop" data-rel="popup">r</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color3</a> )</div>
		<div class="samp">&nbsp;SetPosition( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a> )</div>
		<div class="samp">&nbsp;SetSize( <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a> )</div>
		<div class="samp">&nbsp;GetWidth()</div>
		<div class="samp">&nbsp;GetHeight()</div>

		<div class="samp">&nbsp;SetList( <a href="#pop_str_arr" data-transition="pop" data-rel="popup">list</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">delimeter</a> )</div>
		<div class="samp">&nbsp;GetList( <a href="#pop_str" data-transition="pop" data-rel="popup">delimeter</a> )</div>
		<div class="samp">&nbsp;SetItem( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">newTitle</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">newBody</a>, <a href="#pop_str_pth" data-transition="pop" data-rel="popup">newImage</a> )</div>
		<div class="samp">&nbsp;AddItem( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, <a href="#pop_obj_img" data-transition="pop" data-rel="popup">image</a> )</div>
		<div class="samp">&nbsp;RemoveItem( <a href="#pop_str" data-transition="pop" data-rel="popup">title</a> )</div>
		<div class="samp">&nbsp;SelectItem( <a href="#pop_str" data-transition="pop" data-rel="popup">name</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a>, scrollTo )</div>
		<div class="samp">&nbsp;SelectItemByIndex( <a href="#pop_num_int" data-transition="pop" data-rel="popup">index</a>, scroll )</div>
		<div class="samp">&nbsp;ScrollToItem( <a href="#pop_str" data-transition="pop" data-rel="popup">name</a>, <a href="#pop_str" data-transition="pop" data-rel="popup">body</a> )</div>
		<div class="samp">&nbsp;SetOnTouch( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetOnLongTouch( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetTextSize( <a href="#pop_num_int" data-transition="pop" data-rel="popup">size</a> )</div>
		<div class="samp">&nbsp;GetTextSize( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
		<div class="samp">&nbsp;SetTextColor( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetTextColor1( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetTextColor2( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetHiTextColor1( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetHiTextColor2( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetEllipsize( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
    	<div class="samp">&nbsp;SetEllipsize1( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
    	<div class="samp">&nbsp;SetEllipsize2( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
    	<div class="samp">&nbsp;SetTextShadow( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">radius</a>, <a href="#pop_num_orw" data-transition="pop" data-rel="popup">dx</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">dy</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
    	<div class="samp">&nbsp;SetTextShadow1( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">radius</a>, <a href="#pop_num_orw" data-transition="pop" data-rel="popup">dx</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">dy</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
    	<div class="samp">&nbsp;SetTextShadow2( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">radius</a>, <a href="#pop_num_orw" data-transition="pop" data-rel="popup">dx</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">dy</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
		<div class="samp">&nbsp;SetTextMargins( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_prw" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">bottom</a> )</div>
    	<div class="samp">&nbsp;SetDivider( <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
    	<div class="samp">&nbsp;SetFontFile( <a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a> )</div>
		<br>

	</div><!-- /content -->

<div data-role="popup" id="pop_num" class="ui-content"><b>number</b></div>
<div data-role="popup" id="pop_num_int" class="ui-content"><b>number</b></div>
<div data-role="popup" id="pop_num_ang" class="ui-content"><b>number</b> - degrees (0-360)</div>
<div data-role="popup" id="pop_num_srw" class="ui-content"><b>number</b> - fraction of screen width</div>
<div data-role="popup" id="pop_num_srh" class="ui-content"><b>number</b> - fraction of screen height</div>
<div data-role="popup" id="pop_num_orw" class="ui-content"><b>number</b> - fraction of object width</div>
<div data-role="popup" id="pop_num_orh" class="ui-content"><b>number</b> - fraction of object height</div>
<div data-role="popup" id="pop_num_prw" class="ui-content"><b>number</b> - fraction of parent width</div>
<div data-role="popup" id="pop_num_prh" class="ui-content"><b>number</b> - fraction of parent height</div>
<div data-role="popup" id="pop_str" class="ui-content"><b>string</b></div>
<div data-role="popup" id="pop_str_col" class="ui-content"><b>string</b><br>&nbsp;&nbsp;hexadecimal: "#rrggbb", "#aarrggbb"<br>&nbsp;&nbsp;colourName: "red",  "green", ...</div>
<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string</b> - "/absolute/" or "relative/"</div>
<div data-role="popup" id="pop_str_mod" class="ui-content"><b>string</b> - mode</div>
<div data-role="popup" id="pop_str_arr" class="ui-content"><b>string</b> - comma separated</div>
<div data-role="popup" id="pop_obj" class="ui-content"><b>object</b></div>
<div data-role="popup" id="pop_obj_img" class="ui-content"><b>object</b> - DS image</div>
<div data-role="popup" id="pop_bin" class="ui-content"><b>boolean</b></div>
<div data-role="popup" id="pop_fnc" class="ui-content"><b>function</b> - (args)</div>
</div><!-- /page -->

</body>
</html>
