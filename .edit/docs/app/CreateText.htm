
<!DOCTYPE html>
<html>

<head>
	<title>Text</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<link rel="stylesheet" href="../css/themes/default/theme.min.css" />
		<link rel="stylesheet" href="../css/themes/default/jquery.mobile.structure-1.2.0.min.css" />
		<script src="../js/energize-min.js"></script>
		<script src="../js/jquery-1.8.1.min.js"></script>
		<script src="../../../app.js"></script>
		<script src="../js/example.js"></script>
		<link rel="stylesheet" href="../css/docs.css" />
		<script src="../js/common.js"></script>
		<script src="../js/jquery.mobile-1.2.0.min.js"></script>
</head>

<body>

<div data-role="page" data-theme="a" >

	<div data-role="header" data-position="fixed">
		<a href='#' class='ui-btn-left' data-icon='arrow-l' data-theme="c" onclick="history.back(); return false">Back</a> <h1>Text</h1>
	</div><!-- /header -->

	<div data-role="content">

		<p> Create Text objects using the <b>CreateText</b> method of the <b>app</b> object: </p>

		<div class="samp">&nbsp;txt = app.CreateText( <a href="#pop_str" data-transition="pop" data-rel="popup">text</a>, <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a>, <a href="#pop_str_arr" data-transition="pop" data-rel="popup">options</a> );</div>

		<p>You can use the <b>"Multiline"</b> option to allow multi-line text and the <b>"Left"</b> or <b>"Right"</b> options
		to align the text. The default is single line centered text.<br>
		Other options you will see used in the samples include <b>AutoScale, Bold, Html</b> and <b>FontAwesome</b></p>

		<p>Use the <b>SetText</b> and <b>GetText</b> functions of the Text object to set and get it's text.</p>

		<div data-role="collapsible" data-collapsed="true" data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Single line</h3>
				<div id="examp1" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip1"  style="font-size:100%">
					 &nbsp;&nbsp;txt = app.CreateText( "Hello" );<br>
					 &nbsp;&nbsp;txt.SetTextSize( 22 );<br>
					 &nbsp;&nbsp;lay.AddChild( txt );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip1)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp1)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp1)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>You can change the look of a Text using the <b>SetBackColor</b> and <b>SetTextColor</b> functions on the Text object.</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Multi line</h3>
				<div id="examp2" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip2"  style="font-size:100%">
					 &nbsp;&nbsp;txt = app.CreateText( "Hello\nWorld", 0.8, 0.2, "Multiline"  );<br>
					 &nbsp;&nbsp;txt.SetTextSize( 12 );<br>
					 &nbsp;&nbsp;txt.SetTextColor( "#ff6666ff" );<br>
					 &nbsp;&nbsp;txt.SetBackColor( "#ffffffff" );<br>
					 &nbsp;&nbsp;lay.AddChild( txt );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip2)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp2)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp2)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>Text can be shortened using ellipsis (...) when the size of the control is too small to show all the text. Use the <b>SetEllipsize</b> to control where the ellipsis is placed. Available modes are <b>"start"</b>, <b>"middle"</b>, <b>"end"</b> and <b>"marq"</b>.</p>

		<div data-role="collapsible" data-collapsed="true"  data-mini="true" data-theme="a" data-content-theme="b">
				<h3>Example - Ellipsize</h3>
				<div id="examp3" style="font-size:70%">
					function OnStart()<br>
					{<br>
					 &nbsp;&nbsp;lay = app.CreateLayout( "Linear", "VCenter,FillXY" );<br><br>
					 <b id="snip3"  style="font-size:100%">
					 &nbsp;&nbsp;txt = app.CreateText( "The quick brown fox jumps over the lazy dog", 0.75 );<br>
					 &nbsp;&nbsp;txt.SetTextSize( 28 );<br>
					 &nbsp;&nbsp;txt.SetEllipsize( "end" );<br>
					 &nbsp;&nbsp;lay.AddChild( txt );<br><br>
					 </b>
					 &nbsp;&nbsp;app.AddLayout( lay );<br>
					}<br>
				</div>
				<div name="divCopy" align="right">
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(snip3)">&nbsp;&nbsp;Copy&nbsp;&nbsp;</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="copy(examp3)">Copy All</a>
				<a href="#" data-role="button" data-mini="true" data-inline="true" onclick="demo(examp3)">&nbsp;&nbsp;&nbsp;Run&nbsp;&nbsp;&nbsp;</a>
				</div>
		</div>

		<p>You can also set a background image/pattern or background gradient for the Text using
		the <b>SetBackground</b> and <b>SetBackGradient</b> functions.
		See <a href="Layouts.htm">Layouts</a> for examples of how to use these functions.</p>

		<br>
		<p>The following methods are available on the Text object:</p>

		<div class="samp">&nbsp;SetVisibility( <a href="#pop_bin" data-transition="pop" data-rel="popup">visibility</a> )</div>
		<div class="samp">&nbsp;GetVisibility()</div>
		<div class="samp">&nbsp;SetPadding( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_prw" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">bottom</a> )</div>
		<div class="samp">&nbsp;SetMargins( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_prw" data-transition="pop" data-rel="popup">right</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">bottom</a> )</div>
		<div class="samp">&nbsp;SetBackground( <a href="#pop_str_pah" data-transition="pop" data-rel="popup">imageFile</a>, <a href="#pop_str_arr" data-transition="pop" data-rel="popup">options</a> )</div>
		<div class="samp">&nbsp;SetBackColor( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetBackGradient( <a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color3</a> )</div>
		<div class="samp">&nbsp;SetBackGradientRadial( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">x</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">y</a>, <a href="#pop_num_ang" data-transition="pop" data-rel="popup">r</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color1</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color2</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color3</a> )</div>
		<div class="samp">&nbsp;SetPosition( <a href="#pop_num_prw" data-transition="pop" data-rel="popup">left</a>, <a href="#pop_num_prh" data-transition="pop" data-rel="popup">top</a>, <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a> )</div>
		<div class="samp">&nbsp;SetSize( <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a> )</div>
		<div class="samp">&nbsp;GetWidth()</div>
		<div class="samp">&nbsp;GetHeight()</div>

		<div class="samp">&nbsp;SetText( <a href="#pop_str" data-transition="pop" data-rel="popup">text</a> )</div>
		<div class="samp">&nbsp;SetHtml( <a href="#pop_str_htm" data-transition="pop" data-rel="popup">html</a> )</div>
		<div class="samp">&nbsp;GetText()</div>
		<div class="samp">&nbsp;SetTextColor( <a href="#pop_str_col" data-transition="pop" data-rel="popup">colorCode</a> )</div>
		<div class="samp">&nbsp;SetTextSize( <a href="#pop_num_int" data-transition="pop" data-rel="popup">size</a> )</div>
		<div class="samp">&nbsp;GetTextSize( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
		<div class="samp">&nbsp;GetLineCount()</div>
		<div class="samp">&nbsp;GetMaxLines()</div>
		<div class="samp">&nbsp;GetLineTop( <a href="#pop_num_int" data-transition="pop" data-rel="popup">lineNum</a> )</div>
		<div class="samp">&nbsp;GetLineStart( <a href="#pop_num_int" data-transition="pop" data-rel="popup">lineNum</a> )</div>
		<div class="samp">&nbsp;SetFontFile( <a href="#pop_str_pth" data-transition="pop" data-rel="popup">file</a> )</div>
        <div class="samp">&nbsp;SetEllipsize( <a href="#pop_str_mod" data-transition="pop" data-rel="popup">mode</a> )</div>
    	<div class="samp">&nbsp;SetTextShadow( <a href="#pop_num_orw" data-transition="pop" data-rel="popup">radius</a>, <a href="#pop_num_orw" data-transition="pop" data-rel="popup">dx</a>, <a href="#pop_num_orh" data-transition="pop" data-rel="popup">dy</a>, <a href="#pop_str_col" data-transition="pop" data-rel="popup">color</a> )</div>
		<div class="samp">&nbsp;SetOnTouch( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetOnTouchUp( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetOnTouchMove( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetOnTouchDown( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetOnLongTouch( <a href="#pop_fnc" data-transition="pop" data-rel="popup">callback</a> )</div>
		<div class="samp">&nbsp;SetTouchable( <a href="#pop_bin" data-transition="pop" data-rel="popup">touchable</a> )</div>

		<div class="samp">&nbsp;Focus()</div>
		<div class="samp">&nbsp;GetAbsWidth()</div>
		<div class="samp">&nbsp;GetAbsHeight()</div>
		<div class="samp">&nbsp;GetPosition()</div>
		<div class="samp">&nbsp;GetType()</div>
		<div class="samp">&nbsp;SetScale( <a href="#pop_num_srw" data-transition="pop" data-rel="popup">width</a>, <a href="#pop_num_srh" data-transition="pop" data-rel="popup">height</a> )</div>
		<br>
	</div><!-- /content -->

<div data-role="popup" id="pop_num" class="ui-content"><b>number</b></div>
<div data-role="popup" id="pop_num_int" class="ui-content"><b>number</b></div>
<div data-role="popup" id="pop_num_ang" class="ui-content"><b>number</b> - degrees (0-360)</div>
<div data-role="popup" id="pop_num_srw" class="ui-content"><b>number</b> - fraction of screen width</div>
<div data-role="popup" id="pop_num_srh" class="ui-content"><b>number</b> - fraction of screen height</div>
<div data-role="popup" id="pop_num_orw" class="ui-content"><b>number</b> - fraction of object width</div>
<div data-role="popup" id="pop_num_orh" class="ui-content"><b>number</b> - fraction of object height</div>
<div data-role="popup" id="pop_num_prw" class="ui-content"><b>number</b> - fraction of parent width</div>
<div data-role="popup" id="pop_num_prh" class="ui-content"><b>number</b> - fraction of parent height</div>
<div data-role="popup" id="pop_str" class="ui-content"><b>string</b></div>
<div data-role="popup" id="pop_str_htm" class="ui-content"><b>string</b> - html</div>
<div data-role="popup" id="pop_str_col" class="ui-content"><b>string</b><br>&nbsp;&nbsp;hexadecimal: "#rrggbb", "#aarrggbb"<br>&nbsp;&nbsp;colourName: "red",  "green", ...</div>
<div data-role="popup" id="pop_str_pth" class="ui-content"><b>string</b> - "/absolute/" or "relative/"</div>
<div data-role="popup" id="pop_str_mod" class="ui-content"><b>string</b> - mode</div>
<div data-role="popup" id="pop_str_arr" class="ui-content"><b>string</b> - comma separated</div>
<div data-role="popup" id="pop_bin" class="ui-content"><b>boolean</b></div>
<div data-role="popup" id="pop_fnc" class="ui-content"><b>function</b> - (args)</div>
</div><!-- /page -->

</body>
</html>
